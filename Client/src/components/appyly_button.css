.btn {
    display: inline-flex;
    height: 1rem/* 48px */;
    min-height: 2rem/* 48px */;
    flex-shrink: 0;
    cursor: pointer;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-radius: var(--rounded-btn, 0.5rem/* 8px */);
    border-color: transparent;
    border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
    padding-left: 1rem/* 16px */;
    padding-right: 1rem/* 16px */;
    text-align: center;
    font-size: 0.875rem/* 14px */;
    line-height: 1em;
    gap: 0.5rem/* 8px */;
    font-weight: 600;
    text-decoration-line: none;
    text-decoration-line: none;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    border-width: var(--border-btn, 1px);
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
    transition-property: color, background-color, border-color, opacity, box-shadow, transform;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: var(--fallback-bc,oklch(var(--bc)/1));
    background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
    --tw-bg-opacity: 1;
    --tw-border-opacity: 1;
}
.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    pointer-events: none;
}
.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    pointer-events: none;
}
:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])) {
    width: auto;
    appearance: none;
}
:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])) {
    width: auto;
    appearance: none;
}
.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content);
}
.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content);
}
@media (hover: hover) {
    .btn:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-border-opacity)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
    }
    @supports (color: color-mix(in oklab, black, black)) {
        .btn:hover {
            background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
            border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
        }
    }
    @supports not (color: oklch(0 0 0)) {
        .btn:hover {
            background-color: var(--btn-color, var(--fallback-b2));
            border-color: var(--btn-color, var(--fallback-b2));
        }
    }
}
@media (hover: hover) {
    .btn:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-border-opacity)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
    }
    @supports (color: color-mix(in oklab, black, black)) {
        .btn:hover {
            background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
            border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
        }
    }
    @supports not (color: oklch(0 0 0)) {
        .btn:hover {
            background-color: var(--btn-color, var(--fallback-b2));
            border-color: var(--btn-color, var(--fallback-b2));
        }
    }
}
@media (hover: hover) {
    .btn:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-border-opacity)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
    }
    @supports (color: color-mix(in oklab, black, black)) {
        .btn:hover {
            background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
            border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
        }
    }
    @supports not (color: oklch(0 0 0)) {
        .btn:hover {
            background-color: var(--btn-color, var(--fallback-b2));
            border-color: var(--btn-color, var(--fallback-b2));
        }
    }
}
@media (hover: hover) {
    .btn.glass:hover {
        --glass-opacity: 25%;
        --glass-border-opacity: 15%;
    }
}
@media (hover: hover) {
    .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn:disabled:hover {
        --tw-border-opacity: 0;
        background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
        --tw-bg-opacity: 0.2;
        color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
        --tw-text-opacity: 0.2;
    }
}
@media (hover: hover) {
    .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn:disabled:hover {
        --tw-border-opacity: 0;
        background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
        --tw-bg-opacity: 0.2;
        color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
        --tw-text-opacity: 0.2;
    }
}
@media (hover: hover) {
    @supports (color: color-mix(in oklab, black, black)) {
        .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
            background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
            border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
        }
    }
}
@media (hover: hover) {
    @supports (color: color-mix(in oklab, black, black)) {
        .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
            background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
            border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
        }
    }
}
.btn:active:hover,
  .btn:active:focus {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, 0.97));
}
.btn:active:hover,
  .btn:active:focus {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, 0.97));
}
@supports not (color: oklch(0 0 0)) {
    .btn {
        background-color: var(--btn-color, var(--fallback-b2));
        border-color: var(--btn-color, var(--fallback-b2));
    }
}
.btn:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
}
.btn.glass {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: currentColor;
}
.btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
}
.btn.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    --tw-border-opacity: 0;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.2;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: 0.2;
}
.btn.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    --tw-border-opacity: 0;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.2;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: 0.2;
}
.btn.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    --tw-border-opacity: 0;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.2;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: 0.2;
}
.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
}
.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
}
.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
    outline-color: var(--fallback-p,oklch(var(--p)/1));
}
.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
    outline-color: var(--fallback-p,oklch(var(--p)/1));
}